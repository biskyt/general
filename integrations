version: '3.7'

## !!!!!!! login to docker first. If using stack deploy, include --with-registry-auth !!!!!!!!

services:
  db:
    image: "mariadb:${MARIADBVERSION:-10.4}"
    environment:
      MYSQL_DATABASE: ${MIRTH_DB_NAME:-mirthdb}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-example}
      MYSQL_USER: ${MIRTH_DB_USER:-mirthconnect}
      MYSQL_PASSWORD: "${MIRTH_DB_PASSWORD:-example}"
      TZ: "${TZ:-Europe/London}"
    stdin_open: true
    tty: true
    volumes:
      - "oe-db:/var/lib/mysql"
      - "oe-protected-files:/protected/files"
      - "oe-event-images:/protected/event_images"
    command:
      # Changing log_file_size to allow lightning image processing of larger document image events
      - "--innodb_log_file_size"
      - "128M"
    networks:
      - private
    deploy:
      replicas: 1
      ## The following could be used to directly expose the database connection externally, but this isn't advised
      # labels:
      #   - "traefik.tcp.services.${URL_HOST}-db.loadbalancer.server.port=3306"
      #   - "traefik.tcp.routers.${URL_HOST}-db.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
      #   - "traefik.tcp.routers.${URL_HOST}-db.service=${URL_HOST}-db"
      #   - "traefik.tcp.routers.${URL_HOST}-db.entrypoints=mysql"
  
  web:
    image: "${WEBIMAGE:-toukanlabsdocker/oe-docker}:${WEBIMAGETAG:-latest}"
    hostname: "{{.Task.Name}}_{{.Task.Slot}}"
    environment:
      BASICAUTH_USER: "${BASICAUTH_USER}"
      BASICAUTH_PASSWORD: "${BASICAUTH_PASSWORD}"
      BUILD_BRANCH: '${BUILD_BRANCH:-master}'
      DATABASE_HOST: "db"
      DATABASE_PASS: ${DATABASE_PASS:-openeyes}
      ENABLE_CRON: "${ENABLE_CRON:-TRUE}"
      GENERATE_TEMP_SODIUM_CRYPTO_KEY: "TRUE"
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-example}
      OE_DEFAULT_BRANCH: ${OE_DEFAULT_BRANCH:-}
      OE_DOCMAN_EXPORT_DIRECTORY: ${OE_DOCMAN_EXPORT_DIRECTORY:-}
      OE_HOS_NUM_REGEX: ${OE_HOS_NUM_REGEX:-}
      OE_INSTITUTION_CODE: '${OE_INSTITUTION_CODE:-NEW}'
      OE_MODE: '${OE_MODE:-DEV}'
      OE_PASAPI_ENABLE: ${OE_PASAPI_ENABLE:-TRUE}
      OE_PORTAL_CLIENT_ID: ${OE_PORTAL_USERNAME:-}
      OE_PORTAL_CLIENT_SECRET: ${OE_PORTAL_CLIENT_SECRET:-}
      OE_PORTAL_ENABLED: "${OE_PORTAL_ENABLED:-FALSE}"
      OE_PORTAL_EXTERNAL_URI: ${OE_PORTAL_EXTERNAL_URI:-}
      OE_PORTAL_PASSWORD: ${OE_PORTAL_PASSWORD:-}
      OE_PORTAL_USERNAME: ${OE_PORTAL_USERNAME:-}
      OE_PORTAL_URI: ${OE_PORTAL_URI:-}
      OE_SIGNATURE_APP_URL: ${OE_SIGNATURE_APP_URL:-}
      OE_TECH_SUPPORT_PROVIDER: '${OE_TECH_SUPPORT_PROVIDER:-Toukan Labs}'
      OE_TECH_SUPPORT_URL: '${OE_TECH_SUPPORT_URL:-https://toukanlabs.com}'
      OE_TRAINING_MODE: ${OE_TRAINING_MODE:-}
      OE_USER_BANNER_LONG: ${OE_USER_BANNER_LONG:-}
      OE_USER_BANNER_SHORT: ${OE_USER_BANNER_SHORT:-}
      PHPI_ERROR_REPORTING: "${PHPI_ERROR_REPORTING:-E_ALL}"
      PW_ALLOW_CHANGE: ${PW_ALLOW_CHANGE}
      PW_RES_MIN_LEN: ${PW_RES_MIN_LEN}
      PW_RES_STRENGTH: ${PW_RES_STRENGTH}
      PW_STAT_ADMIN_CHANGE: ${PW_STAT_ADMIN_CHANGE}
      PW_STAT_DAYS_EXPIRE: ${PW_STAT_DAYS_EXPIRE}
      PW_STAT_DAYS_LOCK: ${PW_STAT_DAYS_LOCK}
      PW_STAT_DAYS_STALE: ${PW_STAT_DAYS_STALE}
      RESET_DB_CRON: ${RESET_DB_CRON:-}
      SKIP_DATABASE_STARTUP_CHECKS: ${SKIP_DATABASE_STARTUP_CHECKS:-FALSE}
      SSH_SERVER_ENABLE: "${SSH_SERVER_ENABLE:-FALSE}"
      TRACK_NEW_GIT_COMMITS: ${TRACK_NEW_GIT_COMMITS:-FALSE}
      TZ: "${TZ:-Europe/London}"
      USE_DEMO_DATA: ${USE_DEMO_DATA:-TRUE}
      WAIT_HOSTS_TIMEOUT: "120"
      WAIT_SLEEP_INTERVAL: "3"
    deploy:
      labels:
        # Web service
        - "traefik.enable=true"
        - "traefik.http.services.${URL_HOST?:Must set the URL_HOST}.loadbalancer.server.port=80"
        - "traefik.http.routers.${URL_HOST}.rule=Host(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.http.routers.${URL_HOST}.service=${URL_HOST}"
        - "traefik.http.routers.${URL_HOST}.entrypoints=websecure"
        # SSH
        - "traefik.tcp.services.${URL_HOST}-ssh.loadbalancer.server.port=22"
        - "traefik.tcp.routers.${URL_HOST}-ssh.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-ssh.service=${URL_HOST}-ssh"
        - "traefik.tcp.routers.${URL_HOST}-ssh.entrypoints=ssh"
    networks:
      - proxy
      - private
    secrets:
      - source: ssh_deploy_key
        target: SSH_PRIVATE_KEY
      - source: ssh_authorized_keys
        target: SSH_AUTHORIZED_KEYS
    stdin_open: true
    tty: true
    volumes:
      - "oe-web:/var/www/openeyes"
      - "oe-protected-files:/protected/files"
      - "oe-event-images:/protected/event_images"
    depends_on:
     - "db"

  mc:
    image: nextgenhealthcare/connect:${MIRTH_IMAGE_TAG:-3.9}
    environment:
      TZ: "${TZ:-Europe/London}"
      DATABASE: mysql
      DATABASE_URL: jdbc:mysql://db:3306/${MIRTH_DB_NAME:-mirthdb}
      DATABASE_MAX_CONNECTIONS: 150
      DATABASE_USERNAME: ${MIRTH_DB_USER:-mirthconnect}
      DATABASE_PASSWORD: "${MIRTH_DB_PASSWORD:-example}"
      VMOPTIONS: -Xmx512m
      SESSION_STORE: "TRUE"
    volumes:
      - connect-appdata:/opt/connect/appdata
      - iolmaster_incoming:/mnt/dicom
    deploy:
      labels:
        - "traefik.enable=true"
        # mirth frontend
        - "traefik.http.services.${URL_HOST}-mirth.loadbalancer.server.port=8080"
        - "traefik.http.routers.${URL_HOST}-mirth.rule=Host(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.http.routers.${URL_HOST}-mirth.service=${URL_HOST}-mirth"
        - "traefik.http.routers.${URL_HOST}-mirth.entrypoints=mirth"
        # mirth secure client access
        - "traefik.http.services.${URL_HOST}-mirthsecure.loadbalancer.server.port=8443"
        - "traefik.http.services.${URL_HOST}-mirthsecure.loadbalancer.server.scheme=https"
        - "traefik.http.services.${URL_HOST}-mirthsecure.loadbalancer.responseforwarding.flushinterval=1"
        - "traefik.http.routers.${URL_HOST}-mirthsecure.rule=Host(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.http.routers.${URL_HOST}-mirthsecure.service=${URL_HOST}-mirthsecure"
        - "traefik.http.routers.${URL_HOST}-mirthsecure.entrypoints=mirthsecure"
        # hl7 traffic (Port 2575)
        - "traefik.tcp.services.${URL_HOST}-hl7.loadbalancer.server.port=2575"
        - "traefik.tcp.routers.${URL_HOST}-hl7.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-hl7.service=${URL_HOST}-hl7"
        - "traefik.tcp.routers.${URL_HOST}-hl7.entrypoints=hl7"
        # Port 4200 for PAS API
        - "traefik.tcp.services.${URL_HOST}-4200.loadbalancer.server.port=4200"
        - "traefik.tcp.routers.${URL_HOST}-4200.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-4200.service=${URL_HOST}-4200"
        - "traefik.tcp.routers.${URL_HOST}-4200.entrypoints=4200"
        # Port 11111
        - "traefik.tcp.services.${URL_HOST}-11111.loadbalancer.server.port=11111"
        - "traefik.tcp.routers.${URL_HOST}-11111.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-11111.service=${URL_HOST}-11111"
        - "traefik.tcp.routers.${URL_HOST}-11111.entrypoints=11111"
        # dicom - no encryption (Port 11112)
        - "traefik.tcp.services.${URL_HOST}-11112.loadbalancer.server.port=11112"
        - "traefik.tcp.routers.${URL_HOST}-11112.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-11112.service=${URL_HOST}-11112"
        - "traefik.tcp.routers.${URL_HOST}-11112.entrypoints=dicom"
        # Port 11113
        - "traefik.tcp.services.${URL_HOST}-11113.loadbalancer.server.port=11113"
        - "traefik.tcp.routers.${URL_HOST}-11113.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-11113.service=${URL_HOST}-11113"
        - "traefik.tcp.routers.${URL_HOST}-11113.entrypoints=11113"
        # Port 11114
        - "traefik.tcp.services.${URL_HOST}-11114.loadbalancer.server.port=11114"
        - "traefik.tcp.routers.${URL_HOST}-11114.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-11114.service=${URL_HOST}-11114"
        - "traefik.tcp.routers.${URL_HOST}-11114.entrypoints=11114"
        # Port 11115
        - "traefik.tcp.services.${URL_HOST}-11115.loadbalancer.server.port=11115"
        - "traefik.tcp.routers.${URL_HOST}-11115.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-11115.service=${URL_HOST}-11115"
        - "traefik.tcp.routers.${URL_HOST}-11115.entrypoints=11115"
        # dicom Integrated Secure Communication Layer (Port 2761)
        - "traefik.tcp.services.${URL_HOST}-dicomISCL.loadbalancer.server.port=2761"
        - "traefik.tcp.routers.${URL_HOST}-dicomISCL.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-dicomISCL.service=${URL_HOST}-dicomISCL"
        - "traefik.tcp.routers.${URL_HOST}-dicomISCL.entrypoints=dicomISCL"
        # dicom TLS encryption (Port 2762)
        - "traefik.tcp.services.${URL_HOST}-dicomTLS.loadbalancer.server.port=2762"
        - "traefik.tcp.routers.${URL_HOST}-dicomTLS.rule=HostSNI(`${URL_HOST}.${DOMAINNAME}`)"
        - "traefik.tcp.routers.${URL_HOST}-dicomTLS.service=${URL_HOST}-dicomTLS"
        - "traefik.tcp.routers.${URL_HOST}-dicomTLS.entrypoints=dicomTLS"
        - "traefik.tcp.routers.${URL_HOST}-dicomTLS.tls"
    depends_on:
      - db
      - web
    networks:
      - proxy
      - private

  payload_proc:
    image: appertaopeneyes/payloadprocessor:${PAYLOAD_IMAGE_TAG:-latest}
    environment:
      TZ: "${TZ:-Europe/London}"
      DATABASE_HOST: db
      API_HOST: web 
      API_PORT: 80
      API_USER: "${PAYLOAD_API_USER?:Must specify a user account for PAYLOAD_API_USER}"
      API_PASSWORD: "${PAYLOAD_API_PASSWORD:-}"
      WAIT_HOSTS: web:80
      WAIT_HOSTS_TIMEOUT: 700
      WAIT_SLEEP_INTERVAL: 3
      DATABASE_USER: "${DATABASE_USER:-openeyes}"
      DATABASE_PASS: "${DATABASE_PASS:-openeyes}"
      API_DO_HTTPS: "FALSE"
      #HOSPITAL_NUMBER_CONSTRUCT_REGEX: "((?=^[0-9]{8}$$)^0{2}([0-9]*$$)|(?!^[0-9]{8}$$)([0-9]*))"
      DEFAULT_SUBSPECIALTY: "Eye Casualty"
      DEFAULT_SERVICE: "Eye Casualty Service"
      DEFAULT_FIRM_NAME: "Eye Casualty Service"
    stdin_open: true
    tty: true
    depends_on:
      - db
      - web
    networks:
      - private

  iolm:
    image: ${IOLMASTERIMPORT_IMAGE:-toukanlabsdocker/iolmasterimport:latest}
    volumes: 
      - "iolmaster_incoming:/incoming"
    environment:
      FHIR_API_HOST: 'web'
      FHIR_API_PORT: '80'
      FHIR_API_USER: "${PAYLOAD_API_USER}"
      FHIR_API_PASSWORD: "${PAYLOAD_API_PASSWORD:-}"
      DATABASE_HOST: "db"
      INCOMING_FOLDER: "/incoming"
      WAIT_HOSTS: web:80
      WAIT_HOSTS_TIMEOUT: 700
      DATABASE_USER: ${DATABASE_USER:-openeyes}
      DATABASE_PASS: "${DATABASE_PASS:-openeyes}"
    depends_on:
      - db
    networks:
      - private


networks:
  private:
  proxy:
      external: true

volumes:
  oe-web:
  oe-db:
  oe-protected-files:
  oe-event-images:
  connect-appdata:
  iolmaster_incoming:

secrets:
  ssh_deploy_key:
    external: true
  ssh_authorized_keys:
    external: true
